@model IEnumerable<PerformanceViewModel>

@{
    ViewData["Title"] = "Doanh thu";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h1>Hiệu suất tài xế></h1>


<div class="row mb-3">
    <div class="col-md-3">
        <label for="startDate">Từ ngày:</label>
        <input type="date" id="startDate" name="startDate" class="form-control" />
    </div>
    <div class="col-md-3">
        <label for="endDate">Đến ngày:</label>
        <input type="date" id="endDate" name="endDate" class="form-control" />
    </div>
    <div class="col-md-3">
        <button id="filterButton" class="btn btn-primary mt-4">Thống kê</button>
    </div>
</div>


<div class="table-responsive">
    <table class="table table-striped table-bordered" id="revenueTable">
        <thead>
            <tr>
                <th>Mã tài xế</th>
                <th>Tên tài xế</th>
                <th>Email</th>
                <th>Số điện thoại</th>
                <th>Tổng thu nhập</th>
                <th>Đánh giá trung bình</th>
                @* <th>Chi tiết đánh giá</th> *@
                <th>Số chuyến</th>
                @* <th>Phí hàng tuần</th> *@
                <th>Loại xe</th>
                <th>Model</th>       
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
</div>


@section Scripts {
    <script>
        document.getElementById('filterButton').addEventListener('click', function () {
            const startDate = document.getElementById('startDate').value;
            const endDate = document.getElementById('endDate').value;

            fetch('/Admin/GetDriverReport', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ startDate: startDate, endDate: endDate })
            })
                .then(response => {
                    if (response.ok) {
                        return response.json();
                    } else {
                        return response.text().then(text => {
                            throw new Error(text || response.statusText);
                        });
                    }
                })
                .then(data => {
                    displayDriverReport(data.value);
                })
                .catch(error => {
                    alert("Error: " + error.message);
                });
        });

        function displayDriverReport(data) {
            const tableBody = document.querySelector('#revenueTable tbody');
            tableBody.innerHTML = '';

            @* document.getElementById('totalRevenue').textContent = data.totalRevenue.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' }); *@
           data = JSON.parse(data.reports);
            data.forEach(report => {
                const row = tableBody.insertRow();
                row.insertCell().textContent = report.id; 
                row.insertCell().textContent = report.name; 
                row.insertCell().textContent = report.email; 
                row.insertCell().textContent = report.phone; 
                @* row.insertCell().textContent = report.earning?.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' }) || '0'; *@
                row.insertCell().textContent = report.totalRevenue?.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' }) || '0';
                row.insertCell().textContent = report.rating?.toFixed(1) || 'N/A';
                row.insertCell().textContent = report.tripCount || 0; 
                @* const weeklyFee = report.earning ? (report.earning * 0.20) : 0;
                row.insertCell().textContent = weeklyFee.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });                row.insertCell().textContent = report.vehicleType || 'N/A';  *@
                row.insertCell().textContent = report.vehicleType || 'N/A'; 
                row.insertCell().textContent = report.model || 'N/A'; 
            });
        }
    </script>
}