@model IEnumerable<Ride>

@{
    ViewData["Title"] = "Doanh thu";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h1>Doanh Thu</h1>

<div class="row mb-3">
    <div class="col-md-3">
        <label for="startDate">Từ ngày:</label>
        <input type="date" id="startDate" name="startDate" class="form-control" />
    </div>
    <div class="col-md-3">
        <label for="endDate">Đến ngày:</label>
        <input type="date" id="endDate" name="endDate" class="form-control" />
    </div>
    <div class="col-md-3">
        <button id="filterButton" class="btn btn-primary mt-4">Thống kê</button>
    </div>
</div>
<div class="d-flex justify-content-between align-items-center mb-3">  <!-- Added Bootstrap classes for better layout -->
    <p>Tổng tiền thu hộ: <span id="totalRevenue"></span></p>
    <p>Tổng tiền tài xế đã nộp: <span id="totalPayment"></span></p>
    <a asp-action="Payment" asp-controller="Admin" class="btn btn-primary">Lịch sử giao dịch</a>
</div>


<div class="table-responsive">
    <table class="table table-striped table-bordered" id="revenueTable">
        <thead>
            <tr>
                <th>Mã chuyến</th>
                <th>Thời gian tạo</th>
                <th>Mã khách hàng</th>
                <th>Mã tài xế</th>
                <th>Địa chỉ điểm đón</th>
                <th>Tọa độ điểm đón</th>
                <th>Địa chỉ điểm đén</th>
                <th>Tọa độ điểm đến</th>
                <th>Khoảng cách</th>
                <th>Giá tiền</th>
                <th>Giá voucher</th>
                <th>Tiền thu hộ</th>
                <th>Đánh giá</th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
</div>

@section Scripts {
    <script>
        document.getElementById('filterButton').addEventListener('click', function () {
            const startDate = document.getElementById('startDate').value;
            const endDate = document.getElementById('endDate').value;

            fetch('/Admin/GetRevenueData', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ startDate: startDate, endDate: endDate })
            })
                .then(response => {
                    if (response.ok) {
                        return response.json();
                    } else {
                        return response.text().then(text => {
                            throw new Error(text || response.statusText);
                        });
                    }
                })
                .then(data => {
                    displayRevenueData(data.value);
                })
                .catch(error => {
                    alert("Error: " + error.message);
                });
        });

        function displayRevenueData(data) {
            const tableBody = document.querySelector('#revenueTable tbody');
            tableBody.innerHTML = '';

            document.getElementById('totalRevenue').textContent = data.totalRevenue.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });
            document.getElementById('totalPayment').textContent = data.totalPayment.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });

            data = JSON.parse(data.rides);
            data.forEach(ride => {
        const row = tableBody.insertRow();
        row.insertCell().textContent = ride.id; // Mã chuyến
        row.insertCell().textContent = ride.dcreatedAt; // Thời gian tạo
        row.insertCell().textContent = ride.customerId; // Mã khách hàng
        row.insertCell().textContent = ride.driverId; // Mã tài xế
        row.insertCell().textContent = ride.pickupAddress; // Địa chỉ điểm đón
        row.insertCell().textContent = `(${ride.pickupLocation.latitude}, ${ride.pickupLocation.longitude})`; // Tọa độ điểm đón
        row.insertCell().textContent = ride.dropoffAddress; // Địa chỉ điểm đến
        row.insertCell().textContent = `(${ride.dropoffLocation.latitude}, ${ride.dropoffLocation.longitude})`; // Tọa độ điểm đến
        row.insertCell().textContent = ride.distance; // Khoảng cách
        row.insertCell().textContent = ride.fareAmount.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' }); // Giá tiền
        row.insertCell().textContent = ride.voucherFare.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' }); // Giá voucher
        row.insertCell().textContent = ride.fareAmount - ride.voucherFare; // Tiền thu hộ
        row.insertCell().textContent = ride.rating; // Đánh giá
    });
}
    </script>
}
